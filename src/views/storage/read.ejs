<section class="content">
  <div class="container-fluid mt-4">
    <!-- Header dan Tombol Pull -->
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h1 class="mb-0">Storage Data</h1>
      <a href="/storage/pull-hpsystem" class="btn btn-success">
        ðŸ”„ Pull Data HPSystem
      </a>
    </div>

    <!-- Form Pencarian -->
    <form method="GET" class="mb-3">
      <div class="row align-items-center">
        <div class="col-md-4 mb-2">
          <input
            type="text"
            name="search"
            value="<%= typeof search !== 'undefined' ? search : '' %>"
            class="form-control"
            placeholder="Search Item Name / Kind / Style..."
          />
        </div>
        <div class="col-auto mb-2">
          <button type="submit" class="btn btn-primary">Search</button>
        </div>
        <div class="col-auto mb-2">
          <a href="?" class="btn btn-secondary">Reset</a>
        </div>
      </div>
    </form>

    <!-- Tabel Data -->
    <table class="table table-bordered table-striped">
      <thead>
        <tr>
          <th>#</th>
          <th>Storehouse</th>
          <th>Sheft</th>
          <th>Kind</th>
          <th>Style</th>
          <th>Item Name</th>
          <th>Color</th>
          <th>Unit</th>
          <th>Qty</th>
          <th>Qty1</th>
          <th>Vendor</th>
          <th>Memo</th>
          <th>Date</th>
        </tr>
      </thead>
      <tbody>
        <% if (storage.length === 0) { %>
          <tr>
            <td colspan="13" style="text-align: center;">No data found</td>
          </tr>
        <% } else { %>
        <% storage.forEach((item, i) => { %>
          <tr>
            <td><%= (currentPage - 1) * 100 + i + 1 %></td>
            <td><%= item.storeh %></td>
            <td><%= item.sheft %></td>
            <td><%= item.kind %></td>
            <td><%= item.style %></td>
            <td><%= item.itncna %></td>
            <td><%= item.scolor %></td>
            <td><%= item.unit %></td>
            <td><%= item.qty %></td>
            <td>
              <a href="#"
                 class="qty1-edit-link"
                 data-id="<%= item.id %>"
                 data-qty1="<%= item.qty1 %>">
                <%= item.qty1 %>
              </a>
            </td>
            <td><%= item.vendno %></td>
            <td>  
              <a href="#" class="memo-edit-link" data-id="<%= item.id %>" data-memo="<%= item.memo %>"> <%= item.memo || '-' %></a>
            </td>
            <td><%= item.sdate %></td>            
          </tr>
         <% }) %>
        <% } %>
      </tbody>
    </table>

    <!-- Modal Update Qty1 -->
<div class="modal fade" id="qty1Modal" tabindex="-1" aria-labelledby="qty1ModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <form id="qty1Form">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="qty1ModalLabel">Update Qty1</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="modalQty1Id" name="id" />
          <div class="mb-3">
            <label for="modalQty1" class="form-label">Qty1</label>
            <input type="number" class="form-control" id="modalQty1" name="qty1" required min="0" />
          </div>
          <div id="qty1Feedback" class="text-danger"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          <button type="submit" class="btn btn-primary">Simpan</button>
        </div>
      </div>
    </form>
  </div>
</div>

<!-- Modal Update Memo -->
<div class="modal fade" id="memoModal" tabindex="-1" aria-labelledby="memoModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <form id="memoForm">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="memoModalLabel">Update Memo</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="modalMemoId" name="id" />
          <div class="mb-3">
            <label for="modalMemo" class="form-label">Memo</label>
            <textarea class="form-control" id="modalMemo" name="memo" rows="3"></textarea>
          </div>
          <div id="memoFeedback" class="text-danger"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          <button type="submit" class="btn btn-primary">Simpan</button>
        </div>
      </div>
    </form>
  </div>
</div>


    <!-- Pagination -->
    <nav aria-label="Page navigation" class="mt-3">
      <ul class="pagination justify-content-center">

        <% if (currentPage > 1) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= currentPage - 1 %>">Â« Prev</a>
          </li>
        <% } else { %>
          <li class="page-item disabled">
            <span class="page-link">Â« Prev</span>
          </li>
        <% } %>

        <% 
          const pageLimit = 5;
          let startPage = Math.max(currentPage - Math.floor(pageLimit / 2), 1);
          let endPage = startPage + pageLimit - 1;
          if (endPage > totalPages) {
            endPage = totalPages;
            startPage = Math.max(endPage - pageLimit + 1, 1);
          }
        %>

        <% if (startPage > 1) { %>
          <li class="page-item"><a class="page-link" href="?page=1">1</a></li>
          <% if (startPage > 2) { %>
            <li class="page-item disabled"><span class="page-link">...</span></li>
          <% } %>
        <% } %>

        <% for (let i = startPage; i <= endPage; i++) { %>
          <li class="page-item <%= i === currentPage ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
          </li>
        <% } %>

        <% if (endPage < totalPages) { %>
          <% if (endPage < totalPages - 1) { %>
            <li class="page-item disabled"><span class="page-link">...</span></li>
          <% } %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= totalPages %>"><%= totalPages %></a>
          </li>
        <% } %>

        <% if (currentPage < totalPages) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= currentPage + 1 %>">Next Â»</a>
          </li>
        <% } else { %>
          <li class="page-item disabled">
            <span class="page-link">Next Â»</span>
          </li>
        <% } %>

      </ul>
    </nav>
  </div>
</section>

<!-- Bootstrap 5 JS Bundle (includes Popper) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Qty1 modal
    const qty1Modal = new bootstrap.Modal(document.getElementById('qty1Modal'));
    const modalQty1Id = document.getElementById('modalQty1Id');
    const modalQty1 = document.getElementById('modalQty1');
    const qty1Form = document.getElementById('qty1Form');
    const qty1Feedback = document.getElementById('qty1Feedback');

    document.querySelectorAll('.qty1-edit-link').forEach(link => {
      link.addEventListener('click', function (e) {
        e.preventDefault();
        modalQty1Id.value = this.dataset.id;
        modalQty1.value = this.dataset.qty1;
        qty1Feedback.textContent = '';
        qty1Modal.show();
      });
    });

    qty1Form.addEventListener('submit', async function (e) {
      e.preventDefault();
      const id = modalQty1Id.value;
      const qty1 = modalQty1.value;

      try {
        const response = await fetch('/storage/update-qty1', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify({ id, qty1 })
        });
        const result = await response.json();

        if (response.ok && result.success) {
          const link = document.querySelector(`.qty1-edit-link[data-id="${id}"]`);
          if (link) {
            link.textContent = qty1;
            link.setAttribute('data-qty1', qty1);
          }
          qty1Modal.hide();
        } else {
          qty1Feedback.textContent = result.message || 'Gagal memperbarui Qty1.';
        }
      } catch (err) {
        qty1Feedback.textContent = 'Terjadi kesalahan jaringan.';
      }
    });

    // Memo modal
    const memoModal = new bootstrap.Modal(document.getElementById('memoModal'));
    const modalMemoId = document.getElementById('modalMemoId');
    const modalMemo = document.getElementById('modalMemo');
    const memoForm = document.getElementById('memoForm');
    const memoFeedback = document.getElementById('memoFeedback');

    document.querySelectorAll('.memo-edit-link').forEach(link => {
      link.addEventListener('click', function (e) {
        e.preventDefault();
        modalMemoId.value = this.dataset.id;
        modalMemo.value = this.dataset.memo || '';
        memoFeedback.textContent = '';
        memoModal.show();
      });
    });

    memoForm.addEventListener('submit', async function (e) {
      e.preventDefault();
      const id = modalMemoId.value;
      const memo = modalMemo.value;

      try {
        const response = await fetch('/storage/update-memo', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify({ id, memo })
        });
        const result = await response.json();

        if (response.ok && result.success) {
          const link = document.querySelector(`.memo-edit-link[data-id="${id}"]`);
          if (link) {
            link.textContent = memo || '-';
            link.setAttribute('data-memo', memo);
          }
          memoModal.hide();
        } else {
          memoFeedback.textContent = result.message || 'Gagal memperbarui Memo.';
        }
      } catch (err) {
        memoFeedback.textContent = 'Terjadi kesalahan jaringan.';
      }
    });
  });
</script>
